name: glibcs

# on: [push,pull_request]
on:
  push: 
    tags: 
      - "v*"

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      prerelease: ${{ steps.set_pre.outputs.prerelease }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: temp
          show-progress: false

      - name: Fetch history
        if: ${{ !startsWith(github.ref, 'refs/pull/') }}
        run: |
          git init
          cp $GITHUB_WORKSPACE/temp/.git/config ./.git
          rm -rf d/temp
          # git config remote.origin.fetch '+refs/*:refs/*'
          git fetch --filter=tree:0 # --update-head-ok
          git reset --hard origin/$(git branch --show-current) || true
          git checkout ${{ github.ref_name }}

      - name: Set tag
        id: set_tag
        run: |
          ${{ startsWith(github.ref, 'refs/pull/') && 'cd temp' || '' }}
          echo tag=$(git describe --tags --match "v*" ${{ github.ref }} || git rev-parse --short HEAD) | tee -a $GITHUB_OUTPUT
          exit ${PIPESTATUS[0]}

      - name: Judge pre-release
        id: set_pre
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          if [[ '${{ steps.set_tag.outputs.tag }}' =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo prerelease=false | tee -a $GITHUB_OUTPUT
          else
            echo prerelease=true | tee -a $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          this_tag=${{ steps.set_tag.outputs.tag }}
          if [[ '${{ steps.set_pre.outputs.prerelease }}' != 'false' ]]; then
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude='${{ steps.set_tag.outputs.tag }}')
          else
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude='${{ steps.set_tag.outputs.tag }}' --exclude='*-*')
          fi
          echo >> CHANGELOG.md
          echo "**Full Changelog**: [$last_tag -> $this_tag](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/compare/${last_tag}...${this_tag})" >> CHANGELOG.md

      - name: Upload changelog to Github
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          name: changelog
          path: CHANGELOG.md
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64-gnu,x86_64-linux-gnu,riscv64imac,riscv64gc-lp64,riscv64gc-lp64d,aarch64]
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          bash ./install_deps.sh
      - name: Checkout
        run: |
          python arch/${{matrix.arch}}/build-${{matrix.arch}}.py arch/${{matrix.arch}} checkout
      - name: Build Host-libraries
        run: |
          python arch/${{matrix.arch}}/build-${{matrix.arch}}.py -j $(nproc) arch/${{matrix.arch}} host-libraries
      - name: Build Cross-compilers
        run: |
          python arch/${{matrix.arch}}/build-${{matrix.arch}}.py -j $(nproc) arch/${{matrix.arch}} compilers
      # - name: Tar Compilers
      #   run: |
      #     mkdir -p arch/${{matrix.arch}}/release/compilers
      #     cd arch/${{matrix.arch}}/install/compilers
      #     find . -type d -mindepth 1 -maxdepth 1 -exec tar czvf ${{GITHUB_WORKSPACE}}/arch/${{matrix.arch}}/release/compilers/{}.tar.gz {} \;
      # - name: Upload Compilers
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: compilers-${{matrix.arch}}
      #     path: |
      #       arch/${{matrix.arch}}/release/compilers      
      - name: Build glibcs
        run: |
          python arch/${{matrix.arch}}/build-${{matrix.arch}}.py -j $(nproc) arch/${{matrix.arch}} glibcs
      - name: Tar glibcs
        run: |
          mkdir -p arch/${{matrix.arch}}/release/glibcs
          cd arch/${{matrix.arch}}/install/glibcs
          find . -type d -mindepth 1 -maxdepth 1 -exec tar czvf ${{GITHUB_WORKSPACE}}/arch/${{matrix.arch}}/release/glibcs/{}.tar.gz {} \;
      - name: Upload glibcs
        uses: actions/upload-artifact@v4
        with:
          name: glibcs-${{matrix.arch}}
          path: |
            arch/${{matrix.arch}}/release/glibcs  
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [meta, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download glibc from Github
        uses: actions/download-artifact@v4
        with:
          path: assets

      - name: Cleanup files
        run: |
          mv -vf assets/changelog/* .
          cd assets
          find . -type f | while read f; do mv -fvt . $f; done

      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            assets/*
          prerelease: ${{ needs.meta.outputs.prerelease != 'false' }}
        
